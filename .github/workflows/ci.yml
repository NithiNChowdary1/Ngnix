name: CI

on:
  push:
    branches:
    - 'main'
    - 'release-*'
    paths-ignore:
    - "**.md"
    - "docs/**"
    - "hugo/**"
  pull_request:
    types:
    - opened
    - reopened
    - synchronize

env:
  GOLANGCI_LINT_VERSION: 'v1.52.2'
  NFPM_VERSION: 'v2.32.0'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - name: Lint Agent Code
        uses: golangci/golangci-lint-action@v3
        with:
          version: "${{ env.GOLANGCI_LINT_VERSION }}"
          args: -c ./scripts/.golangci.yml
          skip-pkg-cache: true
      - name: Lint SDK Code
        uses: golangci/golangci-lint-action@v3
        with:
          version: "${{ env.GOLANGCI_LINT_VERSION }}"
          working-directory: sdk
          args: -c ../scripts/.golangci.yml
          skip-pkg-cache: true

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - name: Run Unit Tests
        run: make unit-test
      - name: Upload Test Coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./build/test/coverage.out

  component-test:
    name: Component Tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - name: Run Component Tests
        run: make component-test

  selinux-test: 
    runs-on: macos-latest
    name: SELinux Tests
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
      - id: get-commit
        name: Get Commit 
        run: echo "commit=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Make Package
        run: make local-rpm-package
      - name: Commit 
        run: echo "Commit = ${{steps.get-commit.outputs.commit}}"
      - name: Run Vagrant up 
        run: vagrant up 
      - name: Test 
        run: vagrant ssh -c "sestatus" 
      - name: Install Agent 
        run: vagrant ssh -c "sudo yum localinstall -y /home/vagrant/build/nginx-agent--SNAPSHOT-${{steps.get-commit.outputs.commit}}.rpm" 
      - name: Start Agent 
        run: vagrant ssh -c "sudo systemctl start nginx-agent"
      - name: Enable SELinux for Agent 
        run: |
          vagrant ssh -c "sudo semodule -n -i /usr/share/selinux/packages/nginx_agent.pp"
          vagrant ssh -c "sudo /usr/sbin/load_policy"
          vagrant ssh -c "sudo restorecon -R /usr/bin/nginx-agent;"
          vagrant ssh -c "sudo restorecon -R /var/log/nginx-agent;"
          vagrant ssh -c "sudo restorecon -R /etc/nginx-agent;"
      - name: Check Install 
        run: |
          vagrant ssh -c "sudo ausearch -m AVC,USER_AVC,SELINUX_ERR,USER_SELINUX_ERR -ts recent" 
          vagrant ssh -c "ps auxZ | grep nginx-agent"

